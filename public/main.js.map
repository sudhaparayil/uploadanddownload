{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/allphoto/allphoto.component.css","webpack:///./src/app/components/allphoto/allphoto.component.html","webpack:///./src/app/components/allphoto/allphoto.component.ts","webpack:///./src/app/components/fileupload/fileupload.component.css","webpack:///./src/app/components/fileupload/fileupload.component.html","webpack:///./src/app/components/fileupload/fileupload.component.ts","webpack:///./src/app/service/admin.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminService} from './service/admin.service';\nimport { AppComponent } from './app.component';\nimport {FileUploadModule} from 'ng2-file-upload';\nimport { FileuploadComponent } from './components/fileupload/fileupload.component';\nimport { AllphotoComponent } from './components/allphoto/allphoto.component';\nconst appRoutes: Routes = [\n \n{ path: '', component: FileuploadComponent},\n{ path: 'allphoto', component: AllphotoComponent},\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    FileuploadComponent,\n    AllphotoComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    FileUploadModule\n  ],\n  providers: [AdminService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<a routerLink=\\\"/\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i> download photos</a>\\n<div class=\\\"row\\\" *ngFor=\\\"let item of img; let i = index\\\">\\n    <img width=\\\"50px\\\" src=\\\"../assets/upload/{{item.filename}}\\\">\\n<a href=\\\"../assets/upload/{{item.filename}}\\\" target=\\\"_blank\\\">open window</a>\\n<a href=\\\"../assets/upload/{{item.filename}}\\\" download>download</a></div>\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService} from './../../service/admin.service';\nimport {Router} from '@angular/router';\n// import * as socketIo from 'socket.io-client';\n@Component({\n  selector: 'app-allphoto',\n  templateUrl: './allphoto.component.html',\n  styleUrls: ['./allphoto.component.css']\n})\nexport class AllphotoComponent implements OnInit {\n  img:any;\n  // private socket: any;\n  path='http://localhost:3000';\n  constructor(private adminService : AdminService, private router: Router) {\n    //  this.socket = socketIo(this.path) \n    }\n\n  ngOnInit() {\n    // this.socket.on('photosocket', () => {\n    //   this. getphoto();\n    // });\n    this.adminService.getAllphoto().subscribe(data=>{\n      \n      this.img = data;\n      console.log(this.img)\n      // this.selected=data[0].id;\n     });\n    this. getphoto();\n  }\n  getphoto(){\n    this.adminService.getAllphoto().subscribe(data=>{\n        \n        this.img = data;\n        console.log(this.img)\n        // this.selected=data[0].id;\n       });\n  }\n}\n","module.exports = \".header-section{\\r\\n    height: 80px;\\r\\n    line-height: 80px;\\r\\n    color: beige;\\r\\n    background-color: rgb(46, 43, 43);\\r\\n    font-size: 24px;\\r\\n    padding-left: 20px;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    background-color: white;\\r\\n    box-shadow:0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\\r\\n    color:black;\\r\\n    margin: 20px;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.uploadList{\\r\\n    padding: 10px;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\"","module.exports = \"\\n\\n<!-- <img  src=\\\"../assets/upload/1528036054211.Sunflower.jpeg\\\"> -->\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row header-section\\\">\\n        <span>Angular 4/5 Nodejs File Upload Download Sample</span>\\n    </div>\\n    <a routerLink=\\\"/allphoto\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i> view photos</a>\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-2\\\"></div>\\n        <div class=\\\"col-md-8\\\">\\n            <div class=\\\"row card\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <h4>Upload Section</h4>\\n                    <div id=\\\"fileSelector\\\">\\n                        <input type=\\\"file\\\" name=\\\"fileUplaod\\\" id=\\\"fileUpload\\\"\\n                        multiple ng2FileSelect [uploader]=\\\"uploader\\\">\\n                    </div>\\n                    <div>\\n                        <div class=\\\"row uploadList\\\" *ngFor=\\\"let item of uploader.queue\\\">\\n                            <div class=\\\"col-sm-4\\\">{{item.file.name}}</div>\\n                            <div class=\\\"col-sm-4\\\">\\n                                <div class=\\\"progress\\\">\\n                                    <div class=\\\"progress-bar bg-success\\\" \\n                                    [ngStyle]=\\\"{'width':item.progress+'%'}\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-4\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"item.upload()\\\">Upload</button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"item.remove()\\\">Cancel</button>\\n                            </div>\\n                        </div>                        \\n                    </div>\\n                    <div class=\\\"row\\\" *ngIf=\\\"uploader?.queue?.length > 0\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"uploader.uploadAll()\\\">Upload All</button>\\n                    </div>\\n                 \\n                </div>                \\n            </div>\\n  \\n           \\n            <div class=\\\"row card\\\">\\n                <h4>Download Section</h4>\\n\\n                <div class=\\\"row\\\" *ngFor=\\\"let item of attachmentList; let i = index\\\"\\n                style=\\\"margin:10px;padding:5px;background-color:rgb(231, 229, 229); border-radius:5px; line-height:40px;\\\">\\n                <div class=\\\"col-sm-7\\\">{{item.originalname}}{{item.uploadname}}</div> \\n                    <div class=\\\"col-sm-5\\\" style=\\\"text-align:center;\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"download(i)\\\">Download</button></div>\\n                </div>\\n            </div>\\n            <hr>\\n    \\n        </div>\\n        <div class=\\\"col-md-2\\\"></div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FileSelectDirective, FileUploader} from 'ng2-file-upload';\nimport { AdminService} from './../../service/admin.service';\nimport {saveAs} from 'file-saver';\nconst uri = 'http://localhost:3000/file/upload';\n@Component({\n  selector: 'app-fileupload',\n  templateUrl: './fileupload.component.html',\n  styleUrls: ['./fileupload.component.css']\n})\nexport class FileuploadComponent implements OnInit {\n\n  \n    img:any;\n  ngOnInit() {\n    this.getphoto();\n  }\n  uploader:FileUploader = new FileUploader({url:uri});\n  \n      attachmentList:any = [];\n  \n      constructor(private adminService : AdminService) { \n  console.log(FileUploader)\n          this.uploader.onCompleteItem = (item:any, response:any , status:any, headers:any) => {\n            //   console.log(this.attachmentList)\n              this.attachmentList.push(JSON.parse(response));\n              this.getphoto();\n          }\n         \n      }\n  \n      download(index){\n          \n          var filename = this.attachmentList[index].uploadname;\n  \n          this.adminService.downloadFile(filename)\n          .subscribe(\n              data => saveAs(data, filename),\n              error => console.error(error)\n              \n          );\n        \n      }\n\n      getphoto(){\n        this.adminService.getAllphoto().subscribe(data=>{\n            \n            this.img = data;\n            console.log(this.img)\n            // this.selected=data[0].id;\n           });\n      }\n}\n\n\n","import {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Injectable } from \"@angular/core\";\nimport 'rxjs/Rx';\nimport {Observable} from 'rxjs';\n@Injectable()\nexport class AdminService {\n\n  constructor(private _http: HttpClient) { }\n\n  downloadFile(file:String){\n    var body = {filename:file};\n\n    return this._http.post('http://localhost:3000/file/download',body,{\n        responseType : 'blob',\n        headers:new HttpHeaders().append('Content-Type','application/json')\n    });\n}\ngetAllphoto(){\n    // var body = {filename:file};\n\n    return this._http.get('http://localhost:3000/file/allphoto',{\n        // responseType : 'blob',\n        headers:new HttpHeaders().append('Content-Type','application/json')\n    });\n}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}